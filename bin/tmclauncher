#!/bin/bash
TMC_VERSION='0-20130117'

function print_help(){
	local scrname=$(basename $0)
	cat <<EOD
${scrname}: teketo mclauncher

usage:
${scrname} -h			: print this help
${scrname} -c [<name> [<type>]]	: create sandbox with <type>
${scrname} -j <name> <command> [<arg..>]
				: exec command with setting HOME to sandbox
${scrname} <name>		: start minecraft with specified sandbox
EOD
}

function run_with_sandbox(){
	local sandbox_name sandbox

	sandbox_name="$1"
	shift
	if test -z "${sandbox_name}"; then
		echo "Please specify sandbox name" >&2
		exit 1
	fi
	sandbox="${tmc_root}/sandbox/${sandbox_name}"
	if test ! -d "${sandbox}"; then
		echo "${sandbox} is not exist" >&2
		exit 1
	fi

	HOME="${sandbox}"
	if [ -z "$1" ]; then
		echo "Specify command" >&2
		exit 1
	elif [ "$1" = java ]; then
		shift
		java -Duser.home="${HOME}" $@
		errorcode=$?
	else
		$@
		errorcode=$?
	fi
	HOME="${old_home}"
	return ${errorcode}
}

function create_sandbox(){
	local sandbox_name sandbox_dir sandbox

	sandbox_name="$1"
	if test -z "${sandbox_name}"; then
		echo -n "sandbox name? " >&2
		read sandbox_name
		if test -z "${sandbox_name}"; then
			echo "Please specify sandbox name" >&2
			exit 1
		fi
	fi
	sandbox_dir="${tmc_root}/sandbox"
	if test ! -e "${sandbox_dir}"; then
		mkdir "${sandbox_dir}" || exit 2
	fi
	sandbox="${sandbox_dir}/${sandbox_name}"
	if test -e "${sandbox}"; then
		echo "${sandbox} is exist" >&2
		exit 1
	fi

	archdir="${tmc_root}/architect"
	if test ! -d "${archdir}"; then
		mkdir "${archdir}"
		if which wget >/dev/null 2>&1; then
			echo "getting https://github.com/turenar/teketo-mclauncher/raw/master/architects.tgz..."
			wget -O "${tmc_root}/architects.tgz" https://github.com/turenar/teketo-mclauncher/raw/master/architects.tgz || echo 'failed wget'
		else
			echo 'command "wget" is not found' >&2
			exit 2
		fi
		pushd ${tmc_root} >/dev/null 2>&1
		tar -zxf architects.tgz || ( echo 'failed tar -zxf'; exit 3 )
		popd >/dev/null 2>&1
	fi

	pushd "${tmc_root}/architect" >/dev/null 2>&1
	select arch in *; do
		popd >/dev/null 2>&1
		"${tmc_root}/architect/${arch}" "${sandbox}" "${tmc_root}"
		errorcode=$?
		break
	done

	if test ${errorcode} -ne 0; then
		echo "${arch} returned ${errorcode}" >&2
		exit ${errorcode}
	elif test -e "${sandbox}"; then
		exit 0
	else
		echo "${sandbox} is not created" >&2
		exit 1
	fi
}

function backup_data(){
	sandbox=$1
	sandbox_name=$2
	backup_dst="${tmc_root}/backup"
	if [ ! -e "${backup_dst}" ]; then
		mkdir "${backup_dst}"
	fi

	this_day=$(date +%Y%m%d)
	file_name="${backup_dst}/${sandbox_name}-${this_day}.tar.gz"
	if [ -e "${file_name}" ]; then
		return 1
	fi
	echo 'Backing up...'
	pushd "${sandbox}/.." >/dev/null 2>&1
	tar --dereference -zcf "${file_name}" ${sandbox_name}
	return 0
}

function launch_minecraft(){
	local _tmc_ibus_used sandbox_name sandbox old_home errorcode
	# if tmc_hack_ibus='', skip
	if test ! \( -v tmc_hack_ibus -a -z "${tmc_hack_ibus}" \); then
		if ps -C ibus-daemon >/dev/null; then
			_tmc_ibus_used=1
		fi
	fi

	sandbox_name="$1"
	if test -z "${sandbox_name}"; then
		echo "Please specify sandbox name" >&2
		exit 1;
	fi
	sandbox="${tmc_root}/sandbox/${sandbox_name}"
	if test ! -d "${sandbox}"; then
		echo "${sandbox} is not exist" >&2
		exit 2;
	fi

	backup_data "${sandbox}" "${sandbox_name}"

	old_home="${HOME}"

	test "${_tmc_ibus_used}" -eq 1 && killall ibus-daemon

	HOME="${sandbox}"
	java -Duser.home="${HOME}" -Xmx1024m -Xms512m -jar "${sandbox}/.minecraft/launcher.jar"
	errorcode=$?
	HOME="${old_home}"

	test "${_tmc_ibus_used}" -eq 1 && ibus-daemon --xim -r -d
	exit ${errorcode}
}

function debug_print(){
	echo "HOME=		${HOME}"
	echo "tmc_root=	${tmc_root}"
	echo "archdir=	${tmc_root}/architect"
	if test ! \( -v tmc_hack_ibus -a -z "${tmc_hack_ibus}" \); then
		if ps -C ibus-daemon >/dev/null; then
			_tmc_ibus_used=1
		fi
	fi
	echo "tmc_hack_ibus=	${tmc_hack_ibus:-<unset>}"
	echo "?ibus hack=	${_tmc_ibus_used}"
}


if test -z "${tmc_root}"; then
	tmc_root="${HOME}/.tmclauncher"
fi
if test ! -e "${tmc_root}"; then
	mkdir -p "${tmc_root}"
fi
if test ! -d "${tmc_root}"; then
	echo "$(basename $0): WARN: ${tmc_root} is not exist or not directory"
fi
tmc_root="$(readlink -f ${tmc_root})"

case "$1" in
	'-?'|-h|--help)	print_help;;
	-c|--create)	create_sandbox $2 $3;;
	-D|--debug)	debug_print;;
	-j|--run)	shift; run_with_sandbox $@;;
	-*)		print_help>&2; exit 1;;
	*)		launch_minecraft $1;;
esac


# vim: ts=8
